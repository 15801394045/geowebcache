<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

  <bean id="gwcAppCtx" class="org.geowebcache.util.ApplicationContextProvider" />
  
  <bean id="gwcXmlConfig" class="org.geowebcache.util.XMLConfiguration">
    <constructor-arg ref="gwcAppCtx" />
    <constructor-arg ref="gwcDefaultStorageFinder" />
    <!-- Other samples: -->
    <!--property name="relativePath"><value>../resources</value></property -->
    <!--property name="relativePath"><value>/WEB-INF/classes</value></property-->
    <!--property name="absolutePath"><value>/etc/geowebcache/conf</value></property-->
  </bean>
  
  <!-- If you like to automatically configure GWC from a WMS Getcapabilities document,
       change the values below. The last constructor-arg lets you specify parameters 
       that are appended to every WMS request to the backed, for example: 
       "format_options=regionate_by:auto&amp;bgcolor=0x112233" -->
  <bean id="gwcWMSConfig" class="org.geowebcache.util.GetCapabilitiesConfiguration">
    <constructor-arg value="http://localhost:8080/geoserver/wms?service=wms&amp;request=getcapabilities&amp;version=1.1.0" />
    <constructor-arg value="image/png,image/jpeg,image/png8,image/gif,application/vnd.google-earth.kml+xml"/>
    <constructor-arg value="3x3"/><!-- metatiling factors -->
    <constructor-arg value=""/><!-- vendor parameters -->
    <constructor-arg value="false"/><!-- Whether to allow cached=false to specificed for certain requests --> 
  </bean>
  
  <!-- For each configuration bean above, add them below to activate -->
  <bean id="gwcTLDispatcher" class="org.geowebcache.layer.TileLayerDispatcher">
    <property name="config">
      <list>
	    <ref bean="gwcWMSConfig" />
	    <ref bean="gwcXmlConfig" />
      </list>
    </property>
  </bean>
  
  <bean id="gwcDefaultStorageFinder" class="org.geowebcache.storage.DefaultStorageFinder">
  	<constructor-arg ref="gwcAppCtx" />
  </bean>
  
  <bean id="gwcMetaStore" class="org.geowebcache.storage.metastore.jdbc.JDBCMetaBackend" destroy-method="destroy">
    <constructor-arg ref="gwcDefaultStorageFinder" />
  </bean>
  
  <!-- Static definition of where to put the metastore. 
       Note that the directory is AUTOMATICALLY CREATED if it does not exist. -->
  <!-- bean id="gwcMetaStore" class="org.geowebcache.storage.metastore.jdbc.JDBCMetaBackend" destroy-method="destroy">
    <constructor-arg value="org.h2.Driver" />
    <constructor-arg value="jdbc:h2:file:/tmp/gwc_metastore/h2_metastore;TRACE_LEVEL_FILE=0" />
    <constructor-arg value="username" />
    <constructor-arg value="password" />
  </bean -->
  
  <bean id="gwcBlobStore" class="org.geowebcache.storage.blobstore.file.FileBlobStore" destroy-method="destroy">
    <constructor-arg ref="gwcDefaultStorageFinder" />
  </bean>
  
  <!-- Static definition of where to put the blobstore. 
       Note that the directory MUST EXIST when GWC is started. -->
  <!-- bean id="gwcBlobStore" class="org.geowebcache.storage.blobstore.file.FileBlobStore" destroy-method="destroy">
    <constructor-arg value="/tmp/gwc_blobstore" />
  </bean -->
  
  <bean id="gwcStorageBroker" class="org.geowebcache.storage.StorageBroker" destroy-method="destroy">
    <constructor-arg type="org.geowebcache.storage.MetaStore" ref="gwcMetaStore" />
    <constructor-arg type="org.geowebcache.storage.BlobStore" ref="gwcBlobStore" />
  </bean>
  
  <!-- controller for handling all incoming requests -->
  <bean id="geowebcacheDispatcher" class="org.geowebcache.GeoWebCacheDispatcher" destroy-method="destroy">
    <property name="tileLayerDispatcher" ref="gwcTLDispatcher"/>
    <property name="storageBroker" ref="gwcStorageBroker"/>
    <property name="defaultStorageFinder" ref="gwcDefaultStorageFinder"/>
    <!-- property name="servletPrefix" value=""/ -->
  </bean>
  
  <!-- WMS based services -->
  <bean id="gwcServiceWMS" 
    	class="org.geowebcache.service.wms.WMSService">
    <constructor-arg ref="gwcStorageBroker"/>
	<constructor-arg ref="gwcTLDispatcher"/>
    <property name="proxyRequests"><value>TRUE</value></property>
  </bean>
  <bean id="gwcServiceGMaps"
	class="org.geowebcache.service.gmaps.GMapsConverter">
	<constructor-arg ref="gwcStorageBroker"/>
	<constructor-arg ref="gwcTLDispatcher"/>
  </bean>
  <bean id="gwcServiceMGMaps"
	class="org.geowebcache.service.mgmaps.MGMapsConverter">
	<constructor-arg ref="gwcStorageBroker"/>
	<constructor-arg ref="gwcTLDispatcher"/>
  </bean>
  <bean id="gwcServiceVE"
	class="org.geowebcache.service.ve.VEConverter">
	<constructor-arg ref="gwcStorageBroker"/>
	<constructor-arg ref="gwcTLDispatcher"/>
  </bean>
  <bean id="gwcServiceKML"
	class="org.geowebcache.service.kml.KMLService">
	<constructor-arg ref="gwcStorageBroker"/>
	<constructor-arg ref="gwcTLDispatcher"/>
  </bean>
  <bean id="gwcServiceTMS"
	class="org.geowebcache.service.tms.TMSConverter">
	<constructor-arg ref="gwcStorageBroker"/>
	<constructor-arg ref="gwcTLDispatcher"/>
  </bean>
 
  <!-- WFS based services -->
  <bean id="gwcServiceWFS"
	class="org.geowebcache.service.wfs.WFSService">
	<constructor-arg ref="gwcStorageBroker"/>
	<constructor-arg value="http://localhost:8080/geoserver/wfs" />
	<constructor-arg value="" />
	<constructor-arg value="600" />
  </bean>
	
  <!-- Thread pool for seeding -->
  <bean id="gwcSeederThreadPoolExec" 
    class="org.geowebcache.rest.seed.SeederThreadPoolExecutor">
    <constructor-arg value="16"/><!-- Size of core pool -->
    <constructor-arg value="32"/><!-- Maximum size of pool -->
  </bean>

  <!-- Restlets -->
  <bean id="gwcSeedRestlet" class="org.geowebcache.rest.seed.SeedRestlet">
    <property name="tileLayerDispatcher" ref="gwcTLDispatcher"/>
    <property name="threadPoolExecutor" ref="gwcSeederThreadPoolExec"/>
    <property name="storageBroker" ref="gwcStorageBroker"/>
  </bean>  
  <bean id="gwcSeedFormRestlet" class="org.geowebcache.rest.seed.SeedFormRestlet">
    <property name="tileLayerDispatcher" ref="gwcTLDispatcher"/>
    <property name="threadPoolExecutor" ref="gwcSeederThreadPoolExec"/>
    <property name="storageBroker" ref="gwcStorageBroker"/>
    <property name="seedRestlet" ref="gwcSeedRestlet"/>
  </bean>
  <bean id="gwcReloadRestlet" class="org.geowebcache.rest.reload.ReloadRestlet">
    <property name="tileLayerDispatcher" ref="gwcTLDispatcher"/>
  </bean>
  <bean id="gwcTileLayerRestlet" class="org.geowebcache.rest.layers.TileLayerRestlet">
    <property name="XMLConfiguration" ref="gwcXmlConfig"/>
    <property name="tileLayerDispatcher" ref="gwcTLDispatcher"/>
  </bean>
  <bean id="gwcBoundsRestlet" class="org.geowebcache.rest.bounds.BoundsRestlet">
    <property name="tileLayerDispatcher" ref="gwcTLDispatcher"/>
  </bean>
  <bean id="gwcFilterUpdateRestlet" class="org.geowebcache.rest.filter.FilterUpdateRestlet">
    <constructor-arg  ref="gwcTLDispatcher"/>
  </bean>
  
  
  <!-- REST Dispatcher -->
  <bean id="gwcRestDispatcher" class="org.geowebcache.rest.RESTDispatcher">
    <constructor-arg type="java.util.Map">
      <map>
        <entry>
          <key><value>/seed/{layer}.{extension}</value></key>
          <ref bean="gwcSeedRestlet" />
        </entry>
        <entry>
          <key><value>/seed/{layer}</value></key>
          <ref bean="gwcSeedFormRestlet" />
        </entry>
        <entry>
          <key><value>/reload</value></key>
          <ref bean="gwcReloadRestlet" />
        </entry>
        <entry>
          <key><value>/layers/{layer}.{extension}</value></key>
          <ref bean="gwcTileLayerRestlet" />
        </entry>
        <entry>
          <key><value>/bounds/{layer}/{srs}/{type}</value></key>
          <ref bean="gwcBoundsRestlet" />
        </entry>
        <entry>
          <key><value>/filter/{filterName}/update/{updateType}</value></key>
          <ref bean="gwcFilterUpdateRestlet" />
        </entry>
      </map>
    </constructor-arg>
  </bean>

  <bean id="gwcProxyDispatcher"
	class="org.geowebcache.proxy.ProxyDispatcher"/>
  
  <bean id="gwcUrlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property name="alwaysUseFullPath" value="true"/>
    <property name="mappings">
      <props>
        <prop key="/rest/**">gwcRestDispatcher</prop>        
        <prop key="/service/**">geowebcacheDispatcher</prop>
        <prop key="/demo/**">geowebcacheDispatcher</prop>
	    <prop key="/proxy/**">gwcProxyDispatcher</prop>
      </props>
    </property>
  </bean>
  
</beans>
